# -*- coding: utf-8 -*-
# define a fuction to  convert any number in decimal system to binary.

def int_bin(num):
  isNeg = 0
  ans = 0
  num = int(num)
  if num < 0:
      isNeg = True
      num = abs(num)
  else:
      isNeg = False
  result = ''
  if num == 0:
      result = '0'
  while num > 0:
      result = str(num%2) + result
      num = num // 2
  if isNeg:
      result = '-' + result
  return result

def bin_decimal_part(x):


  p = 0
  while ((2**p)*x)%1 != 0:
      #print('Remainder = ' + str((2**p)*x - int((2**p)*x)))
      p += 1

  num = int(x*(2**p))

  result = ''
  if num == 0:
      result = '0'
  while num > 0:
      result = str(num%2) + result
      num = num//2

  for i in range(p - len(result)):
      result = '0' + result

  result = result[0:-p] + '.' + result[-p:]
  return result



def binary(num):
 

#define a subfunction to get binary from int number.   
 
      
  int_part = int(num)
  decimal_part = abs(num - int_part)
  isNeg = 0
  if (num - int_part) < 0:
    isNeg = True
        
  else:
    isNeg = False







#get binary for integer number  
  if decimal_part == 0:
    ans = int_bin(num)
    return ans



#convert to binary for decimal number 
  else:
    decimal_part = bin_decimal_part(decimal_part)

    
#     count = 0
# #convert a decimal number to integer number by muliplate a big enough number    
#     while int(decimal_part) != float(decimal_part):
#       decimal_part = decimal_part * 2
#       count += 1
#       pass
    
#     decimal_part = int(decimal_part)
    

#     decimal_part = int_bin(decimal_part)
#     decimal_part = str(decimal_part)
#     for i in range(count - len(decimal_part)):
#       decimal_part = '0' + decimal_part
#       pass
#     #
    
    
  
    # decimal_part = decimal_part[0 : -count] + '.' + decimal_part[-count : ]


    
#for numbers whoes first digital is not zero
    if abs(num) > 1:
      #decimal_part = decimal_part[1 : ]
      ans = str(int_part) + decimal_part
     
#for numbers whoes first digital is zero
    else:

      ans = '0' + decimal_part
      
      if isNeg:
        result = '-' + result
  return ans
  print(ans)
      
    
